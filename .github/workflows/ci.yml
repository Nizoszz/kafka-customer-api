name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ develop ]

jobs:
  build:
    name: Build and Test Java Project
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:latest
        ports:
          - 27017:27017
        env:
          MONGO_INITDB_DATABASE: ${{ secrets.DB_NAME }}
          MONGO_INITDB_ROOT_USERNAME: ${{ secrets.DB_USERNAME }}
          MONGO_INITDB_ROOT_PASSWORD: ${{ secrets.DB_PASS }}
        options: >-
          --health-cmd "mongosh --eval 'db.stats()'"
          --health-interval 20s 
          --health-timeout 10s 
          --health-retries 10

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Build with Maven
      run: mvn clean install

    - name: Run tests
      run: mvn test

    - name: Wait for MongoDB to be ready
      run: |
        until docker exec -it ${{ job.services.mongo.id }} mongosh --eval 'db.stats()'; do
          echo "Waiting for MongoDB to be ready..."
          sleep 5
        done
        echo "MongoDB is ready!"

    - name: View MongoDB logs
      run: docker logs ${{ job.services.mongo.id }}

    - name: Check if MongoDB container is running
      run: docker ps -f name=mongo
