name: CI
on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
jobs:
  build:
    name: Build and Test Java Project
    runs-on: ubuntu-latest
    services:
      mongo:
        image: mongo:latest
        ports:
          - 27017:27017
        env:
          MONGO_INITDB_DATABASE: ${{ secrets.DB_NAME }}
          MONGO_INITDB_ROOT_USERNAME: ${{ secrets.DB_USERNAME }}
          MONGO_INITDB_ROOT_PASSWORD: ${{ secrets.DB_PASS }}
        options: >-
          --health-cmd "echo 'db.runCommand({ping:1})' | mongosh --quiet"
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Install MongoDB Shell
      run: |
        wget -qO- https://www.mongodb.org/static/pgp/server-7.0.asc | sudo apt-key add -
        echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu jammy/mongodb-org/7.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-7.0.list
        sudo apt-get update
        sudo apt-get install -y mongodb-mongosh
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Check MongoDB connection
      run: |
        sleep 10
        echo "Verificando conexÃ£o com MongoDB..."
        mongosh --host localhost:27017 --username ${{ secrets.DB_USERNAME }} --password ${{ secrets.DB_PASS }} --eval "db.runCommand({ping: 1})"
    - name: Run tests
      run: mvn test
    - name: Build with Maven
      run: mvn clean install -DskipTests
    - name: Generate Tag
      id: generate_tag
      run: |
        SHA=${echo $GITHUB_SHA | head -c7}
        echo "sha=$SHA" >> $GITHUB_OUTPUT
    - name: Version update release
      run: mvn versions:set -DnewVersion=${{ github.run_number }}
    - name: Build docker image
      run: docker build -t kafka-customer-api:${{ steps.generate_tag.outputs.sha }} .

